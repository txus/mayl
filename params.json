{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Mayl","google":"","tagline":"A console to edit and maintain YAML files for any Ruby project","body":"# mayl - a YAML console\r\n\r\nMayl is an anagram of YAML, and also a console to create, edit and maintain\r\nYAML files in any kind of Ruby projects.\r\n\r\n## Warning: Not released yet\r\n\r\nThis is not a released project yet. It's just a Readme specification to define\r\nthe API and some features. You'll see a usable version soon! ;)\r\n\r\n## Installation\r\n\r\nInstall mayl yourself:\r\n\r\n    $ gem install mayl\r\n\r\n## Usage\r\n\r\nMayl expects your YAML files to be organized like this: one file per locale\r\n(`en.yml`, `es.yml`, `ca.yml`...) in a directory.\r\n\r\nWhen it starts, it needs to know where to find all these YAML files, and it\r\nlooks by default under `./config/locales` but you can always run it like `mayl\r\nsome/other/dir` to override this.\r\n\r\n    $ mayl\r\n    Detected locales: ca, en, es\r\n    >\r\n\r\nNow we'll set a new key by typing `set KEY` and typing in the translations:\r\n\r\n    > set activerecord.models.post\r\n      ca: Article\r\n      en: Post\r\n      es: Artículo\r\n\r\n      Set activerecord.models.post to Article (ca), Post (en) and Artículo (es)\r\n    >\r\n\r\nChanges get written to the file immediately. We can consult a key any time,\r\nand in case we see any error, correct it quickly with `edit LOCALE NEWVALUE`:\r\n\r\n    > get activerecord.models.post\r\n      ca: Article\r\n      en: Post\r\n      es: Artículo\r\n    > edit es Entrada\r\n\r\n      Set activerecord.models.post to Entrada (es)\r\n    >\r\n\r\n### Namespaces\r\n\r\nIf you want to work for a while inside a namespace, let's say\r\n`activerecord.models`, you can do so by `cd`-ing into it, and even `ls` the\r\nexisting keys:\r\n\r\n    > cd activerecord.models\r\n    activerecord.models > get post\r\n      ca: Article\r\n      en: Post\r\n      es: Entrada\r\n    activerecord.models > cd ..\r\n    activerecord > ls\r\n    models attributes\r\n    activerecord > cd ..\r\n    >\r\n\r\nCool way to navigate your YAML files huh?\r\n\r\n### Other useful commands\r\n\r\n* `reload`: Reloads the file in case someone has changed it for some reason\r\n  (which ideally should not happen).\r\n* `exit`: Exits the console.\r\n\r\n## Development\r\n\r\nTo run the tests:\r\n\r\n    $ rake\r\n\r\nTo build the documentation under the `doc` directory:\r\n\r\n    $ rake doc\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## Who's this\r\n\r\nThis was made by [Josep M. Bach (Txus)](http://txustice.me) under the MIT\r\nlicense. I'm [@txustice](http://twitter.com/txustice) on twitter (where you\r\nshould probably follow me!).\r\n"}